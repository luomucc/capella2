<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<!--
  Copyright (c) 2006, 2017 THALES GLOBAL SERVICES.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
  http://www.eclipse.org/legal/epl-v10.html

  Contributors:
       Thales - initial API and implementation
-->
<plugin>
   <extension point="org.eclipse.emf.validation.constraintProviders">
      <constraintProvider>
         <package namespaceUri="http://www.polarsys.org/capella/core/pa/1.2.0">
         </package>
         <constraints
               categories="capella.category/transition/justification/epbs">
            <constraint
                  class="org.polarsys.capella.core.data.pa.validation.pa.MDCHK_PhysticalArchitecture_PhysicalArchitectureRealization"
                  id="TJ_EPBS_01"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="TJ_EPBS_01 - Physical Architecture Realization"
                  severity="ERROR"
                  statusCode="1">
               <message>
                  Realization consistency error for {0}.
               </message>
               <target
                     class="PhysicalArchitecture">
               </target>
               <description>
                  This rule checks the realization consistency between physical architecture and EPBS architecture.
               </description>
            </constraint>
         </constraints>
         <constraints
               categories="capella.category/design/well-formedness/components">
            <constraint
                  class="org.polarsys.capella.core.data.pa.validation.physicalComponent.MDCHK_Component_Deployment"
                  id="DWF_DC_04"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="DWF_DC_04 - Check multiple deployment"
                  severity="ERROR"
                  statusCode="1">
               <message>
                  {0} (PhysicalComponent) must be deployed only once.
               </message>
               <target
                     class="PhysicalComponent">
               </target>
               <description>
                  This rule depends on the Preference option "Multiple deployment allowed". If this option is set to false, the rule checks that a Behavior Physical Component is not deployed on more than one Node Physical Component.
               </description>
            </constraint>
            <constraint
                  class="org.polarsys.capella.core.data.pa.validation.physicalComponent.MDCHK_PhysicalComponent_Deployment"
                  id="DWF_DC_17"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="DWF_DC_17 - Physical Component deployment check"
                  severity="WARNING"
                  statusCode="1">
               <message>
                  {0} (Behavior Physical Component) is deploying {1} (Node Physical Component) .
               </message>
               <target
                     class="PhysicalComponent">
               </target>
               <description>
                  This rule ensures that a node physical component is not deployed on a behavior physical component.
               </description>
            </constraint>
             <constraint
                   class="org.polarsys.capella.core.data.pa.validation.physicalComponent.PhysicalComponentFunctionAllocation"
                   id="DWF_DC_20"
                   isEnabledByDefault="true"
                   lang="Java"
                   mode="Batch"
                   name="DWF_DC_20 - Physical Component Function Allocation check"
                   severity="ERROR"
                   statusCode="1">
                <message>
                   {0}
                </message>
                <description>
                   This rule ensures that Physical Component of nature NODE does not allocate any Function.
                </description>
                <target
                      class="PhysicalComponent">
                </target>
             </constraint>
             <constraint
                   class="org.polarsys.capella.core.data.pa.validation.physicalComponent.ContainementCheckNodeAndBehaviour"
                   id="DWF_DC_21"
                   isEnabledByDefault="true"
                   lang="Java"
                   mode="Batch"
                   name="DWF_DC_21 - Containement check for node and behaviour"
                   severity="ERROR"
                   statusCode="1">
                <message>
                   {0}
                </message>
                <description>
                   This rule ensures that NodePC is not contained in BehaviourPC and BehaviourPC is not contained in NodePC.

NodePC=Physical Component of nature NODE
BehaviourPC=Physical Component of nature BEHAVIOUR
                </description>
                <target
                      class="PhysicalComponent">
                </target>
             </constraint>
             <constraint
                   class="org.polarsys.capella.core.data.pa.validation.physicalComponent.NodeDeploymentInBehaviourPC"
                   id="DWF_DC_22"
                   isEnabledByDefault="true"
                   lang="Java"
                   mode="Batch"
                   name="DWF_DC_22 - NodeDeployment In BehaviourPC"
                   severity="ERROR"
                   statusCode="1">
                <message>
                   {0}
                </message>
                <description>
                   This rule ensures that NodePC is not deployed in BehaviourPC.

NodePC=Physical Component of nature NODE
BehaviourPC=Physical Component of nature BEHAVIOUR
                </description>
                <target
                      class="PhysicalComponent">
                </target>
             </constraint>
             <constraint
                   class="org.polarsys.capella.core.data.pa.validation.physicalComponent.NodeDeploymentInPhysicalActor"
                   id="DWF_DC_23"
                   isEnabledByDefault="true"
                   lang="Java"
                   mode="Batch"
                   name="DWF_DC_23 - NodeDeployment In PhysicalActor"
                   severity="ERROR"
                   statusCode="1">
                <message>
                   {0}
                </message>
                <description>
                   This rule ensures that NodePC is not deployed in PhysicalActor.

NodePC=Physical Component of nature NODE
                </description>
                <target
                      class="PhysicalComponent">
                </target>
             </constraint>
             <constraint
                   class="org.polarsys.capella.core.data.pa.validation.physicalComponent.UnsetPhysicalComponent"
                   id="DWF_DC_34"
                   isEnabledByDefault="true"
                   lang="Java"
                   mode="Batch"
                   name="DWF_DC_34 - PhysicalComponent of nature UNSET"
                   severity="WARNING"
                   statusCode="1">
                <message>
                   {0}
                </message>
                <description>
                   This rule ensures that a Physical Component is not of nature UNSET.
                </description>
                <target
                      class="PhysicalComponent">
                </target>
             </constraint>
         </constraints>
         <constraints
               categories="capella.category/integrity">
            <constraint
                  class="org.polarsys.capella.core.data.pa.validation.physicalActor.MDCHK_PhysicalActor_ActorRealization"
                  id="I_06"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="I_06 - Physical Actor Realization"
                  severity="WARNING"
                  statusCode="1">
               <message>
                  {0}
               </message>
               <target
                     class="PhysicalActor">
               </target>
               <description>
                 This rule Ensures that Physical Actor always realizes a Logical Actor.
               </description>
            </constraint>
         </constraints>
         <constraints
               categories="capella.category/transition/justification/physical_architecture">
            <constraint
                  class="org.polarsys.capella.core.data.pa.validation.physicalComponent.MDCHK_PhysicalComponent_InterfaceUseAndImpl_1"
                  id="TJ_PA_06"
                  isEnabledByDefault="true"
                  lang="java"
                  mode="Batch"
                  name="TJ_PA_06 - Physical component used and implemented interface check 1"
                  severity="WARNING"
                  statusCode="1">
               <message>
                  {0} (Physical Component) should not implement / use / require / provide [{1}]Interface(s) of logical level which is/are not implemented / used / provided / required  by any of its realized Logical Components.
               </message>
               <description>
                  This rule ensures that a Physical Component implements / uses a logical interface which is used / implemented / provided / required by its realized Logical Components. 

This rule is only evaluated if the transition preference &quot;Transit Interfaces handled by Components from context/logical layers to physical architecture&quot; is disabled.
               </description>
               <target
                     class="PhysicalComponent">
               </target>
            </constraint>
            <constraint
                  class="org.polarsys.capella.core.data.pa.validation.physicalComponent.MDCHK_PhysicalComponent_InterfaceUseAndImpl_2"
                  id="TJ_PA_07"
                  isEnabledByDefault="true"
                  lang="java"
                  mode="Batch"
                  name="TJ_PA_07 - Physical component used and implemented interface check 2"
                  severity="WARNING"
                  statusCode="1">
               <message>
                  {0} (Physical Component) is not supposed to implement / use / provide / require an interface defined elsewhere than the physical architecture.
               </message>
               <description>
                  This rule checks that a Physical Component implements / uses / provides / requires an interface of its own level. 

This rule is only evaluated if the transition preference&quot;Transit Interfaces handled by Components from context/logical layers to physical architecture&quot; is enabled.
               </description>
               <target
                     class="PhysicalComponent">
               </target>
            </constraint>
            <constraint
                  class="org.polarsys.capella.core.data.pa.validation.physicalComponent.MDCHK_PhysicalComponent_LogicalComponentRealization"
                  id="TJ_PA_08"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="TJ_PA_08 - Logical Component Realization"
                  severity="ERROR"
                  statusCode="1">
               <message>
                  Realization consistency error for {0}.
               </message>
               <target
                     class="PhysicalComponent">
               </target>
               <description>
                  This rule checks the realization consistency between logical components and physical components.
               </description>
            </constraint>
            <constraint
                  class="org.polarsys.capella.core.data.pa.validation.physicalActor.PhysicalActor_LogicalActor_ActorRealization"
                  id="TJ_PA_10"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="TJ_PA_10 - Physical Actor to Logical Actor Realization"
                  severity="WARNING"
                  statusCode="1">
               <message>
                  {0} (Physical Actor) does not realize any Logical Actor.
               </message>
               <target
                     class="PhysicalActor">
               </target>
               <description>
                  This rule ensures that a Physical Actor realizes at least one Logical Actor.
               </description>
            </constraint>
         </constraints>
      </constraintProvider>
   </extension>
</plugin>
