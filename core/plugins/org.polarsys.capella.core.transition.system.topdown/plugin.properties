# ====================================================================
# Copyright (c) 2006, 2017 THALES GLOBAL SERVICES.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
# 
# Contributors:
#    Thales - initial API and implementation
# ====================================================================
group.scope=Scope
transition.interface.name=Transit Interfaces handled by Components from context/logical layers to physical architecture
transition.interface.description=Transit Interfaces handled by Components from context/logical layers to physical architecture

transition.exchangeItem.name=Transit allocated Exchange Items while transition of Interfaces, Functions or Components
transition.exchangeItem.description=Transit allocated Exchange Items while transition of Interfaces, Functions or Components

transition.dataType.name=Transit Datatypes handled by Exchanges items while transition of Exchange Items
transition.dataType.description=Transit Datatypes handled by Exchanges items while transition of Exchange Items

transition.stateMachine.name=Transit State Machines owned by a Component while transition of Components
transition.stateMachine.description=Transit State Machines owned by a Component while transition of Components

transition.function.name=Transit Functional elements allocated by an Operational Entity or Operational Actor while their transition
transition.function.description=Transit Functional elements allocated by an Operational Entity or Operational Actor while their transition

transition.lcpc.name=Logical Components to Physical Components
transition.lcpc.description=
transition.lcpc.breakdown.name=Propagate logical component breakdown in physical architecture
transition.lcpc.breakdown.description=
transition.lcpc.leaf.name=Propagate only leaf logical component in physical architecture
transition.lcpc.leaf.description=

transition.log.name=Enable log in Information view
transition.log.description=On transition with a lot of elements, display logs can lower performances [Only ERROR logs will be generated]
group.log=Log
group.logGroup=Log


group.transition.propertyValue.name=Property Values
transition.propertyValue.involvedElements.name=Include involved elements
transition.propertyValue.involvedElements.description=Involved elements will be included while transition of Property Values
transition.propertyValue.name=Transit Property Values while transition of Model Elements
transition.propertyValue.description=Transit Property Values while transition of Model Elements
transition.propertyValue.appliedPropertyValues.name=Propagate Property Values application
transition.propertyValue.appliedPropertyValues.description=Propagate Applied Property Values's reference on Model Elements

group.scope.propertyValue.name=Transit Property Values while transition of Model Elements
transition.system.scope.ownedPropertyValues.name=Include owned Property Values
transition.system.scope.ownedPropertyValues.description=Include owned Property Values while transition of Model Elements
transition.system.scope.appliedPropertyValues.name=Include applied Property Values
transition.system.scope.appliedPropertyValues.description=Include applied Property Values while transition of Model Elements

transition.generation=Generation
transition.generation.ports=Interface generation
projection.interfaces.createCE=Create component exchange between provider/requirer ports
projection.interfaces.createCE.description=Create component exchange between provider/requirer ports
projection.interfaces.propagateEI=Propagate Exchange Items from Functional Exchange to Function Ports
projection.interfaces.propagateEI.description=Propagate Exchange Items from Functional Exchange to Function Ports

providerName = Eclipse.org
pluginName = System Intramodel Transition plugin