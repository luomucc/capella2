<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Eclipse EGF
-->
<project name="project" default="all">
    <property environment="env" />

	<property name="relengDir" value="${basedir}"/>
	<tstamp>
		<format property="myTimestamp" pattern="yyyyMMdd-HHmm"/>
	</tstamp>

    <condition property="build.root" value="${env.WORKSPACE}">
        <isset property="env.WORKSPACE" />
    </condition>
    <condition property="tools" value="${env.tools}">
        <isset property="env.tools" />
    </condition>
    <condition property="result" value="${env.result}">
        <isset property="env.result" />
    </condition>
    <condition property="publish" value="${env.publish}">
        <isset property="env.publish" />
    </condition>
    <condition property="workspace" value="${env.ECLIPSE_WORKSPACE}">
        <isset property="env.ECLIPSE_WORKSPACE" />
    </condition>
    <condition property="timestamp" value="${env.BUILD_ID}">
        <isset property="env.BUILD_ID" />
    </condition>
    <condition property="VERSION" value="${env.VERSION}">
        <isset property="env.VERSION" />
    </condition>
    <condition property="buildVersion" value="${env.buildVersion}">
        <isset property="env.buildVersion" />
    </condition>
    <condition property="qualifier.replacement.*" value="${env.qualifier.replacement.*}">
        <isset property="env.qualifier.replacement.*" />
    </condition>
    <condition property="hudson.job.url" value="${env.hudson.job.url}">
        <isset property="env.hudson.job.url" />
    </condition>
    <condition property="capella.version" value="${env.capella.version}">
        <isset property="env.capella.version" />
    </condition>
    <condition property="site_QueryLegacy" value="${env.site_QueryLegacy}">
        <isset property="env.site_QueryLegacy" />
    </condition>
    <condition property="site_DiffMerge" value="${env.site_DiffMerge}">
        <isset property="env.site_DiffMerge" />
    </condition>
    <condition property="site_Patterns" value="${env.site_Patterns}">
        <isset property="env.site_Patterns" />
    </condition>
    <condition property="site_Kitalpha_CTK" value="${env.site_Kitalpha_CTK}">
        <isset property="env.site_Kitalpha_CTK" />
    </condition>
    <condition property="site_Kitalpha_SDK" value="${env.site_Kitalpha_SDK}">
        <isset property="env.site_Kitalpha_SDK" />
    </condition>
    <condition property="site_Amalgam" value="${env.site_Amalgam}">
        <isset property="env.site_Amalgam" />
    </condition>
    <condition property="src.job" value="${env.src.job}">
        <isset property="env.src.job" />
    </condition>
    <condition property="usedTP" value="${env.usedTP}">
        <isset property="env.usedTP" />
    </condition>
    <condition property="runner-path" value="${env.runner-path}">
        <isset property="env.runner-path" />
    </condition>
    <condition property="aut-path" value="${env.aut-path}">
        <isset property="env.aut-path" />
    </condition>
    <condition property="test-location" value="${env.test-location}">
        <isset property="env.test-location" />
    </condition>

    <property file="build.properties" />

    <!-- This macro executes the default application of an eclipse installation that resides
         in the folder ${buildtools}/@app
      -->
    <macrodef name="eclipse.launch">
        <attribute name="app" />
        <attribute name="workspace" default="${workspace}" />
        <element name="args" optional="true" />
        <sequential>
            <!-- We assume that the eclipse installation is beneath ${tools} -->
            <property name="@{app}.deploy.dir" value="${tools}/@{app}" />

            <!-- Find the Eclipse launcher and assing its location to the @{app}.launcher property -->
            <pathconvert property="@{app}.launcher">
                <first count="1">
                    <sort>
                        <fileset dir="${@{app}.deploy.dir}/plugins" includes="**/org.eclipse.equinox.launcher_*.jar" />
                        <reverse xmlns="antlib:org.apache.tools.ant.types.resources.comparators">
                            <date />
                        </reverse>
                    </sort>
                </first>
            </pathconvert>

			<!-- Copy Eclipse Variables preferences -->
			<copy file="${relengDir}/templates/org.eclipse.core.variables.prefs"
				toFile="@{workspace}/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.core.variables.prefs"/>

            <!-- Launch the eclipse application -->
            <java fork="true" jar="${@{app}.launcher}" dir="${@{app}.deploy.dir}" failonerror="true">
                    <jvmarg value="-Xmx1024m"/>
                    <jvmarg value="-XX:MaxPermSize=256m"/>

	                <jvmarg value="-DrelengDir=relengDir"/>
	                <jvmarg value="-Dbuild.root=${build.root}"/>
	                <jvmarg value="-Dtools=${tools}"/>
	                <jvmarg value="-Dresult=${result}"/>
	                <jvmarg value="-Dpublish=${publish}"/>
	                <jvmarg value="-Dworkspace=${workspace}"/>
	                <jvmarg value="-Dtimestamp=${timestamp}"/>
	                <jvmarg value="-DVERSION=${VERSION}"/>
	                <jvmarg value="-DbuildVersion=${buildVersion}"/>
	                <jvmarg value="-Dqualifier.replacement.*=${qualifier.replacement.*}"/>
	                <jvmarg value="-Dhudson.job.url=${hudson.job.url}"/>
	                <jvmarg value="-Dcapella.version=${capella.version}"/>
	                <jvmarg value="-Dsite_QueryLegacy=${site_QueryLegacy}"/>
	                <jvmarg value="-Dsite_DiffMerge=${site_DiffMerge}"/>
	                <jvmarg value="-Dsite_Patterns=${site_Patterns}"/>
	                <jvmarg value="-Dsite_Kitalpha_CTK=${site_Kitalpha_CTK}"/>
	                <jvmarg value="-Dsite_Kitalpha_SDK=${site_Kitalpha_SDK}"/>
	                <jvmarg value="-Dsite_Amalgam=${site_Amalgam}"/>
	                <jvmarg value="-Dsrc.job=${src.job}"/>
	                <jvmarg value="-DusedTP=${usedTP}"/>
	                <jvmarg value="-Drunner-path=${runner-path}"/>
	                <jvmarg value="-Daut-path=${aut-path}"/>
	                <jvmarg value="-Dtest-location=${test-location}"/>
                    <arg value="-data" />
                    <arg value="@{workspace}" />
                <args />
            </java>
        </sequential>
    </macrodef>
    <target name="install.director">
        <available file="${tools}/director/director" property="director.exists" />
        <antcall target="do.install.director" />
    </target>
    
    <target name="do.install.director" unless="director.exists">
        <echo message="Fetching headless director application" />
        <tempfile destdir="${java.io.tmpdir}" prefix="director-" suffix=".zip" property="director.zip" deleteonexit="true" />
        <get src="${director.url}" dest="${director.zip}" />
        <mkdir dir="${tools}" />
        <unzip src="${director.zip}" dest="${tools}" />
        <delete file="${director.zip}" />
    </target>
    <target name="install.buckminster">
        <available file="${tools}/buckminster/buckminster" property="buckminster.exists" />
        <antcall target="do.install.buckminster" />
	</target>
	
    <target name="do.install.buckminster" unless="buckminster.exists" depends="install.director">
        <echo message="Configuring headless buckminster with needed features" />
        <echo message="Headless site: ${bm.headless.site}" />
        <echo message="External site: ${bm.external.site}" />
        <eclipse.launch app="director">
            <args>
                <jvmarg value="-Declipse.p2.mirrors=false" />
                <arg value="-r" />
                <arg value="${bm.headless.site}" />
                <arg value="-d" />
                <arg value="${tools}/buckminster" />
                <arg value="-p" />
                <arg value="Buckminster" />
                <arg value="-i" />
                <arg value="org.eclipse.buckminster.cmdline.product" />
                <arg value="-i" />
                <arg value="org.eclipse.buckminster.core.headless.feature.feature.group" />
                <arg value="-i" />
                <arg value="org.eclipse.buckminster.pde.headless.feature.feature.group" />
            </args>
        </eclipse.launch>
    </target>
        <target name="install.egf">
        <available file="${tools}/egf/eclipse.ini" property="egf.exists" />
        <antcall target="do.install.egf" />
	</target>

	<target name="do.install.egf" unless="egf.exists" depends="install.director">
        <echo message="Configuring EGF with needed features" />
        <echo message="EGF site: ${egf.site}" />
        <echo message="EGF eclipse site: ${egf.eclipse.site}" />
        <eclipse.launch app="director">
            <args>
                <jvmarg value="-Declipse.p2.mirrors=false" />
                <arg value="-r" />
                <arg value="${egf.site}" />
                <arg value="-r" />
                <arg value="${egf.eclipse.site}" />
                <arg value="-d" />
                <arg value="${tools}/egf" />
                <arg value="-p" />
                <arg value="EGF" />
                <arg value="-i" />
                <arg value="org.eclipse.platform.ide" />
                <arg value="-i" />
                <arg value="org.eclipse.egf.feature.group" />
                <arg value="-i" />
                <arg value="org.eclipse.egf.portfolio.feature.group" />
                <arg value="-i" />
                <arg value="org.eclipse.egf.portfolio.emf.feature.group" />
                <arg value="-i" />
                <arg value="org.eclipse.egf.portfolio.genchain.feature.group" />
            </args>
        </eclipse.launch>
    </target>
    <macrodef name="buckminster">
        <attribute name="command" />
        <element name="globargs" optional="true" />
        <element name="cmdargs" optional="true" />
        <sequential>
            <eclipse.launch app="buckminster">
                <args>
                    <jvmarg value="-Dbugfix.288796=true"/>
                    <arg value="--loglevel" />
                    <arg value="${buckminster.loglevel}" />
                    <arg value="--displaystacktrace" />
                    <globargs />
                    <arg value="@{command}" />
                    <arg value="-P" />
                    <arg value="${properties.tmp}" />
                    <cmdargs />
                </args>
            </eclipse.launch>
        </sequential>
    </macrodef>
	<macrodef name="egf">
        <element name="activities" />
        <element name="globargs" optional="true" />
        <element name="cmdargs" optional="true" />
        <sequential>
            <eclipse.launch app="egf">
                <args>
                    <arg value="-application" />
                    <arg value="org.eclipse.egf.application.activity" />
                    <arg value="-consoleLog" />
                    <globargs />
                    <arg value="-activities" />
                    <activities />
                    <cmdargs />
                </args>
            </eclipse.launch>
        </sequential>
    </macrodef>
	<macrodef name="anteclipse">
        <attribute name="buildfile" default="${relengDir}/build.xml" />
        <attribute name="target" />
        <element name="globargs" optional="true" />
        <sequential>
            <eclipse.launch app="egf">
                <args>
					<arg value="-application" />
					<arg value="org.eclipse.ant.core.antRunner" />
					<arg value="-consoleLog" />
                    <globargs />
					<arg value="-buildfile" />
					<arg value="@{buildfile}" />
					<arg value="@{target}" />
                </args>
            </eclipse.launch>
        </sequential>
    </macrodef>
    <target name="clean.result">
        <delete dir="${result}" failonerror="true" quiet="true" />
    </target>

    <target name="clean.workspace">
        <delete dir="${workspace}" failonerror="true" quiet="true" />
    </target>

    <target name="clean.tools">
        <delete dir="${tools}" failonerror="true" quiet="true" />
    </target>

    <target name="clean.all">
		<antcall target="clean.workspace" />
		<antcall target="clean.result" />
		<antcall target="clean.tools" />
    </target>
	<target name="init" depends="init.build.properties" >
		<echo message="Available variables are : "/>
		<echo message="Builtin $${relengDir} : ${relengDir}" />
		<echo message="Builtin $${build.root} : ${build.root}" />
		<echo message="Builtin $${tools} : ${tools}" />
		<echo message="Builtin $${result} : ${result}" />
		<echo message="Builtin $${publish} : ${publish}" />
		<echo message="Builtin $${workspace} : ${workspace}" />
		<echo message="Builtin $${timestamp} : ${timestamp}" />
		<echo message="Provided $${VERSION} : ${VERSION}" />
		<echo message="Provided $${buildVersion} : ${buildVersion}" />
		<echo message="Provided $${qualifier.replacement.*} : ${qualifier.replacement.*}" />
		<echo message="Provided $${hudson.job.url} : ${hudson.job.url}" />
		<echo message="Provided $${capella.version} : ${capella.version}" />
		<echo message="Provided $${site_QueryLegacy} : ${site_QueryLegacy}" />
		<echo message="Provided $${site_DiffMerge} : ${site_DiffMerge}" />
		<echo message="Provided $${site_Patterns} : ${site_Patterns}" />
		<echo message="Provided $${site_Kitalpha_CTK} : ${site_Kitalpha_CTK}" />
		<echo message="Provided $${site_Kitalpha_SDK} : ${site_Kitalpha_SDK}" />
		<echo message="Provided $${site_Amalgam} : ${site_Amalgam}" />
		<echo message="Provided $${src.job} : ${src.job}" />
		<echo message="Provided $${usedTP} : ${usedTP}" />
		<echo message="Provided $${runner-path} : ${runner-path}" />
		<echo message="Provided $${aut-path} : ${aut-path}" />
		<echo message="Provided $${test-location} : ${test-location}" />
	</target>

    <target name="init.build.properties">
        <!-- Echo relevant properties to a temporary file so that Buckminster can read them -->
        <tempfile destdir="${java.io.tmpdir}" prefix="build-" suffix=".properties" deleteonexit="true" property="properties.tmp" />
        <echoproperties destfile="${properties.tmp}">
            <!-- We don't want these. basedir in particular will cause problems if passed explicitly -->
            <propertyset negate="true">
                <propertyref name="basedir" />
                <propertyref name="eclipse.home" />
                <propertyref name="properties.tmp" />
                <propertyref name="line.separator" />
                <propertyref name="path.separator" />
                <propertyref prefix="ant." />
                <propertyref prefix="file." />
                <propertyref prefix="java." />
                <propertyref prefix="sun." />
                <propertyref prefix="user." />
            </propertyset>
        </echoproperties>
    </target>
	
	<target name="all" depends="InitializeEnv,RunRCPTTTestSuites" />
	<target name="InitializeEnv" depends="InitializeEnv_Clean_Result,InitializeEnv_delete_TP,InitializeEnv_Download_CapellaTP" />
	<target name="RunRCPTTTestSuites" depends="RunRCPTTTestSuites_Install_RCPTT,RunRCPTTTestSuites_Execute_Tests" />
	<target name="InitializeEnv_Clean_Result" >
		<antcall target="clean.result" />
	</target>

	<target name="InitializeEnv_Download_CapellaTP">
		<antcall target="DownloadCapellaTP"/>
	</target>

<target name="DownloadCapellaTP">
	 <dirname property="dir" file="${usedTP}.ts"/>
	 <mkdir dir="${dir}" />

	<get 
		src="${hudson.job.url}/buildTimestamp?format=yyyy-MM-dd_HH-mm-ss" 
		dest="${usedTP}.ts"/>
	
	<loadfile srcfile="${usedTP}.ts" property="ts"/>
	<echo>${usedTP} timestamp: ${ts}</echo>

	<get 
		src="${hudson.job.url}/artifact/result/publish/capella-${capella.version}.${ts}-linux-gtk-x86_64-${eclipseCodeName}.tar.gz"
		dest="${usedTP}.tar.gz"/>

<gunzip src="${usedTP}.tar.gz"/>
<untar src="${usedTP}.tar" dest="${usedTP}"/>

</target> 



	<target name="RunRCPTTTestSuites_Install_RCPTT">
		<antcall target="install.rcptt"/>
	</target>

<target name="install.rcptt">
	<property name="rcptt.url">http://download.eclipse.org/rcptt/release/2.0.2/runner/rcptt.runner-2.0.2.zip</property>
	
	<available file="${tools}/rcptt" property="rcptt.exists" />
	<antcall target="do.install.rcptt" />
</target>

<target name="do.install.rcptt" unless="rcptt.exists">
	<echo message="Fetching headless rcptt application" />
	<tempfile destdir="${java.io.tmpdir}" prefix="rcptt-" suffix=".zip" property="rcptt.zip" deleteonexit="true" />
	<get src="${rcptt.url}" dest="${rcptt.zip}" />
	<mkdir dir="${tools}" />
	<unzip src="${rcptt.zip}" dest="${tools}/rcptt" />
	<delete file="${rcptt.zip}" />
</target>


	<target name="RunRCPTTTestSuites_Execute_Tests">
		<antcall target="test"/>
	</target>

<target name="test">
	<ant antfile="../../../rcptt.xml"/>
</target>

	<target name="InitializeEnv_delete_TP" depends="init">
		<delete dir="${usedTP}" >

		</delete>
	</target>

</project>