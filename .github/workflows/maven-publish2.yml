# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      discussions: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven1
      run:  mvn clean verify -f releng/plugins/org.polarsys.capella.targets/pom.xml

    - name: Build with Maven
      run: mvn -Djacoco.skip=true -DjavaDocPhase=none -Pfull -DSKIP_SONAR=true clean package -f pom.xml

    - name: echo log
      run: ls -l ./releng/plugins/org.polarsys.capella.rcp.product/target/products


    - name: Get current timestamp
      id: get_timestamp
      run: echo "::set-output name=timestamp::$(date +'%Y%m%d%H%M%S')"

    - name: Create a single ZIP file containing all artifacts
      run: |
        TIMESTAMP=${{ steps.get_timestamp.outputs.timestamp }}
        OUTPUT_ZIP="all-artifacts-${TIMESTAMP}.zip"
        ARTIFACTS_DIR="./releng/plugins/org.polarsys.capella.rcp.product/target/products" # 修改为实际存放ZIP文件的目录
        zip -r $OUTPUT_ZIP $ARTIFACTS_DIR/*.zip
        echo "::set-output name=output_zip::${OUTPUT_ZIP}"
      id: compress_artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ steps.get_timestamp.outputs.timestamp }}
        release_name: Release-${{ steps.get_timestamp.outputs.timestamp }}
        draft: false
        prerelease: false

    - name: Upload the compressed ZIP file
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # 获取上一步创建的Release URL
        asset_path: ./${{ steps.compress_artifacts.outputs.output_zip }}
        asset_name: ${{ steps.compress_artifacts.outputs.output_zip }}
        asset_content_type: application/zip

